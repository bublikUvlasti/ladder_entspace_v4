const { PrismaClient } = require('./app/generated/prisma');
const argon2 = require('argon2');

const prisma = new PrismaClient();

async function createTestUser() {
    try {
        console.log('üîß –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        const existingUser = await prisma.user.findUnique({
            where: { email: 'test@example.com' }
        });
        
        if (existingUser) {
            console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:');
            console.log(`   ID: ${existingUser.id}`);
            console.log(`   Name: ${existingUser.name}`);
            console.log(`   Email: ${existingUser.email}`);
            return existingUser;
        }
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const hashedPassword = await argon2.hash('testpassword123');
        
        const testUser = await prisma.user.create({
            data: {
                name: 'Test User',
                email: 'test@example.com',
                password: hashedPassword,
                wins: 0
            }
        });
        
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:');
        console.log(`   ID: ${testUser.id}`);
        console.log(`   Name: ${testUser.name}`);
        console.log(`   Email: ${testUser.email}`);
        
        return testUser;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
        throw error;
    } finally {
        await prisma.$disconnect();
    }
}

if (require.main === module) {
    createTestUser().catch(console.error);
}

module.exports = { createTestUser }; 