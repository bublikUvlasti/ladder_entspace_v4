// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ countdown –ª–æ–≥–∏–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞
// –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–≥—Ä—ã

console.log('üéØ –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥–∫–∏ countdown –ª–æ–≥–∏–∫–∏');

// –°–∏–º—É–ª—è—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
let currentGame = null;
let countdown = null;

function simulateGameFinish() {
    console.log('üèÜ –°–∏–º—É–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã');
    
    // –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ gameUpdated —Å–æ–±—ã—Ç–∏—è
    currentGame = {
        id: 'test123',
        code: 'TEST',
        status: 'FINISHED',
        winner: { name: 'TestPlayer' }
    };
    
    console.log('üéØ currentGame —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', currentGame);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ countdown
    checkAndStartCountdown();
}

function checkAndStartCountdown() {
    console.log('üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –¥–ª—è –∑–∞–ø—É—Å–∫–∞ countdown:');
    
    const gameStatus = currentGame?.status;
    const isFinished = gameStatus === 'FINISHED';
    const countdownIsNull = countdown === null;
    const shouldStartCountdown = isFinished && countdownIsNull;
    
    console.log('   - gameStatus:', gameStatus);
    console.log('   - isFinished:', isFinished);
    console.log('   - countdownIsNull:', countdownIsNull);
    console.log('   - shouldStartCountdown:', shouldStartCountdown);
    
    if (shouldStartCountdown) {
        console.log('üéØ –£—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –∑–∞–ø—É—Å–∫ countdown');
        startCountdown();
    } else {
        console.log('‚ùå –£—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã');
    }
}

function startCountdown() {
    countdown = 7;
    console.log('üéØ Countdown –∑–∞–ø—É—â–µ–Ω —Å 7 —Å–µ–∫—É–Ω–¥');
    
    const timer = setInterval(() => {
        countdown--;
        console.log(`üéØ Countdown: ${countdown}`);
        
        if (countdown <= 0) {
            console.log('üéØ Countdown –∑–∞–≤–µ—Ä—à–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é');
            clearInterval(timer);
            console.log('‚úÖ –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø—Ä–æ–∏–∑–æ—à–µ–ª –±—ã router.push("/")');
            return;
        }
    }, 1000);
}

function resetTest() {
    currentGame = null;
    countdown = null;
    console.log('üîÑ –¢–µ—Å—Ç —Å–±—Ä–æ—à–µ–Ω');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.debugCountdown = {
    simulateGameFinish,
    checkAndStartCountdown,
    resetTest,
    getCurrentGame: () => currentGame,
    getCountdown: () => countdown
};

console.log('‚úÖ –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã!');
console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:');
console.log('   - debugCountdown.simulateGameFinish() - —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã');
console.log('   - debugCountdown.resetTest() - —Å–±—Ä–æ—Å–∏—Ç—å —Ç–µ—Å—Ç');
console.log('   - debugCountdown.getCurrentGame() - –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –∏–≥—Ä—É');
console.log('   - debugCountdown.getCountdown() - –ø–æ–ª—É—á–∏—Ç—å countdown'); 